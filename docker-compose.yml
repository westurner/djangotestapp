
version: '2'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile-python:2.7
    networks:
    - intnet
    ports:
    - "8000:8000"
    volumes:
    - "${_VAR}/wheelhouse":/wheelhouse

  nginx:
    image: nginx:stable
    #image: nginx:stable-alpine
    # https://hub.docker.com/_/nginx/
    # https://github.com/nginxinc/docker-nginx/blob/master/stable/jessie/Dockerfile
    networks:
    - intnet
    ports:
    - "80:80"
    - "443:443"
    volumes:
    - ${_LOG}/nginx:/var/log/nginx
    - ${_VAR}/www:/usr/share/nginx/html:ro
    #- ${_ETC}/nginx:/etc/nginx:ro

  mq:
    image: rabbitmq:3
    # https://hub.docker.com/_/rabbitmq/
    # https://github.com/docker-library/rabbitmq/blob/master/Dockerfile
    hostname: mq
    networks:
    - intnet
    ports:
    # https://www.rabbitmq.com/networking.html
    - 25672:5672     # rabbitmq AMQP
    - 25671:5671     # rabbitmq AMQP TLS
    # - 15672:15672  # management
    environment:
    - RABBITMQ_NODENAME='rabbit@mq'
    - RABBITMQ_ERLANG_COOKIE='guest'
    - RABBITMQ_DEFAULT_USER='guest'
    - RABBITMQ_DEFAULT_PASS='guest'
    volumes:
    - ${_VAR}/lib/rabbitmq:/var/lib/rabbitmq

  es:
    image: elasticsearch:2
    # https://hub.docker.com/_/elasticsearch/
    # https://github.com/docker-library/elasticsearch/blob/master/2.3/Dockerfile
    networks:
    - intnet
    ports:
      - "9300:9200"
    volumes:
    #- ${_ETC}/elasticsearch:/usr/share/elasticsearch/config:ro
    - ${_VAR}/elasticsearch/data:/usr/share/elasticsearch/data

  #db:
  #  image: postgres:9
  #  # https://hub.docker.com/_/postgres/
  #  # https://github.com/docker-library/postgres/blob/master/9.5/Dockerfile
  #  networks:
  #  - intnet
  #  ports:
  #  - "5432:5432"
  #  environment:
  #  - POSTGRES_INITDB_ARGS=''
  #  - POSTGRES_USER='postgres'
  #  - POSTGRES_DB='postgres'
  #  - POSTGRES_PASSWORD='guest'
  #  - PGDATA='/var/lib/postgresql/data/pgdata'
  #  - LANG=en_US.utf8
  #  volumes:
  #  - ${_VAR}/lib/postgresql/data:/var/lib/postgresql/data/pgdata
  #  - ${_ETC}/postgres/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/:ro

  db:
    image: mysql:5
    # https://hub.docker.com/_/mysql/
    # https://github.com/docker-library/mysql/blob/master/5.7/Dockerfile
    networks:
    - intnet
    ports:
    - "3306:3306"
    environment:
    - MYSQL_ROOT_PASSWORD='guest'
    - MYSQL_USER='guest'
    - MYSQL_PASSWORD='guest'
    - MYSQL_DATABASE='mysql'
    - MYSQL_ALLOW_EMPTY_PASSWORD='no'
    #- MYSQL_ONETIMEPASSWORD='guest'
    - LANG=en_US.utf8
    volumes:
    # $ chcon -Rt svirt_sandbox_file_t ${_VAR}/lib/mysql
    - ${_VAR}/lib/mysql:/var/lib/mysql
    - ${_ETC}/mysql/conf.d:/etc/mysql/conf.d

  cache:
    image: memcached:1
    #image: memcached:alpine-1
    # https://hub.docker.com/_/memcached/
    # https://github.com/docker-library/memcached/blob/master/debian/Dockerfile
    networks:
    - intnet
    ports:
    - "11211:11211"
    #memswap_limit: 0 # TODO
    #mem_limit: # TODO

networks:
  intnet:
